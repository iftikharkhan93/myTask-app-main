{"version":3,"sources":["firebase_config.js","Todo.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","TodoListItem","todo","inprogress","id","style","display","ListItem","ListItemText","primary","secondary","Button","onClick","collection","doc","update","variant","height","marginTop","backgroundColor","value","delete","App","useState","todos","setTodos","todoInput","setTodoInput","useEffect","onSnapshot","querySnapshot","docs","map","data","className","TextField","label","width","maxWidth","onChange","e","target","type","preventDefault","trim","add","timestamp","FieldValue","serverTimestamp","ReactDOM","render","document","getElementById"],"mappings":"sOAYAA,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,sDACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,gBACnBC,MAAO,+CAKT,IAAMC,EAAKT,IAASU,Y,0BCVL,SAASC,EAAT,GAAiD,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,WAAYC,EAAM,EAANA,GAgBvD,OACE,sBAAKC,MAAO,CAAEC,QAAS,QAAvB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAASP,EACTQ,UAAWP,EAAa,cAAgB,gBAI5C,cAACQ,EAAA,EAAD,CAAQC,QAxBZ,WAEEb,EAAGc,WAAW,SAASC,IAAIV,GAAIW,OAAO,CACpCZ,YAAaA,KAqBsBa,QAAQ,GAAGX,MAAO,CAACY,OAAO,MAAMC,UAAU,OAAOC,gBAAgB,UAAWC,MAAQjB,EAAa,OAAS,SAA7I,SACGA,EAAa,OAAS,WAKzB,cAACQ,EAAA,EAAD,CAAQC,QAtBZ,WACEb,EAAGc,WAAW,SAASC,IAAIV,GAAIiB,UAqB7B,kBCkDSC,MA1Ef,WAAgB,IAAD,EAGaC,mBAAS,IAHtB,mBAGNC,EAHM,KAGCC,EAHD,OAIqBF,mBAAS,IAJ9B,mBAING,EAJM,KAIKC,EAJL,KAiCb,OA3BAC,qBAAU,WAKR7B,EAAGc,WAAW,SAASgB,YAAW,SAAUC,GAC1CL,EACEK,EAAcC,KAAKC,KAAI,SAAClB,GAAD,MAAU,CAC/BV,GAAIU,EAAIV,GACRF,KAAMY,EAAImB,OAAO/B,KACjBC,WAAYW,EAAImB,OAAO9B,qBAR5B,IA0BD,qBAAK+B,UAAU,MAAf,SACE,sBAAKA,UAAU,SAAf,UACA,+DACA,iCACA,cAACC,EAAA,EAAD,CACM/B,GAAG,iBACHgC,MAAM,qBACNhB,MAAOM,EACPrB,MAAO,CAAEgC,MAAO,OAAQC,SAAU,SAClCC,SAAU,SAACC,GAAD,OAAOb,EAAaa,EAAEC,OAAOrB,UAEzC,cAACT,EAAA,EAAD,CACE+B,KAAK,SACL1B,QAAQ,YACRJ,QA1BV,SAAiB4B,GACfA,EAAEG,iBACqB,KAApBjB,EAAUkB,QACb7C,EAAGc,WAAW,SAASgC,IAAI,CACzB1C,YAAY,EACZ2C,UAAWxD,IAASU,UAAU+C,WAAWC,kBACzC9C,KAAMwB,IAGRC,EAAa,KAkBLtB,MAAO,CAAEC,QAAS,QAJpB,wBASJ,qBAAK4B,UAAU,YAAf,SACKV,EAAMQ,KAAI,SAAC9B,GAAD,OACT,cAACD,EAAD,CACEC,KAAMA,EAAKA,KACXC,WAAYD,EAAKC,WACjBC,GAAIF,EAAKE,UAIf,qBAAKA,GAAG,iBCpEhB6C,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.4a7c7d08.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCbB8hgj0D5-5KzDgEYkYPH3uDtq7cKwFs\",\n  authDomain: \"mytaskapp-d4ff6.firebaseapp.com\",\n  databaseURL: \"https://mytaskapp-d4ff6-default-rtdb.firebaseio.com\",\n  projectId: \"mytaskapp-d4ff6\",\n  storageBucket: \"mytaskapp-d4ff6.appspot.com\",\n  messagingSenderId: \"1037156365276\",\n  appId: \"1:1037156365276:web:85bc0c9b6c5be8589f5519\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nexport { db };\n","import React from \"react\";\nimport { ListItem, ListItemText, Button } from \"@material-ui/core\";\nimport { db } from \"./firebase_config\";\n\nexport default function TodoListItem({ todo, inprogress, id }) {\n  function toggleInProgress() {\n    \n    db.collection(\"todos\").doc(id).update({\n      inprogress: !inprogress,\n    });\n    \n  }\n\n  function deleteTodo() {\n    db.collection(\"todos\").doc(id).delete();\n  }\n\n  \n \n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <ListItem>\n        <ListItemText\n          primary={todo}\n          secondary={inprogress ? \"In Progress\" : \"Completed\"}\n        />\n      </ListItem>\n\n      <Button onClick={toggleInProgress} variant=\"\" style={{height:\"70%\",marginTop:\"15px\",backgroundColor:\"e5e5e5\"}} value= {inprogress ? \"Done\" : \"UnDone\"}> \n        {inprogress ? \"Done\" : \"UnDone\"}\n      </Button>\n\n      \n\n      <Button onClick={deleteTodo}>X</Button>\n\n\n\n\n        \n\n\n     \n            \n    </div>\n  );\n}\n\n\n","\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\nimport { useState,useEffect } from 'react';\nimport { Button } from \"@material-ui/core\";\n\nimport { db } from \"./firebase_config\";\nimport firebase from \"firebase\";\n\nimport TodoListItem from \"./Todo\";\n\nfunction App() {\n\n\n  const [todos, setTodos] = useState([]);\n  const [todoInput, setTodoInput] = useState(\"\");\n\n  useEffect(() => {\n    getTodos();\n  }, []); // blank to run only on first launch\n\n  function getTodos() {\n    db.collection(\"todos\").onSnapshot(function (querySnapshot) {\n      setTodos(\n        querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          todo: doc.data().todo,\n          inprogress: doc.data().inprogress,\n        }))\n      );\n    });\n  }\n\n  function addTodo(e) {\n    e.preventDefault();\n    if(todoInput.trim() !==\"\"){\n    db.collection(\"todos\").add({\n      inprogress: true,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      todo: todoInput,\n    });\n  }\n    setTodoInput(\"\");\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"layout\">\n      <h1>MyTask Manager - üìù</h1>\n      <form>\n      <TextField\n            id=\"standard-basic\"\n            label=\"Plans for the day?\"\n            value={todoInput}\n            style={{ width: \"90vw\", maxWidth: \"500px\" }}\n            onChange={(e) => setTodoInput(e.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            onClick={addTodo}\n            style={{ display: \"none\" }}\n          >\n            Default\n          </Button>\n      </form>\n      <div className=\"listitems\">\n          {todos.map((todo) => (\n            <TodoListItem\n              todo={todo.todo}\n              inprogress={todo.inprogress}\n              id={todo.id}\n            />\n          ))}\n        </div>\n        <div id=\"alerts\">\n       \n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}